plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'ca.mcgill.ecse321'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.security:spring-security-core:5.7.4' // Add this line
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Configuring test task to use JUnit platform and enable detailed logging
tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = "full"
		events "passed", "failed", "skipped"
	}
	// Ensure JaCoCo test report is generated after tests
	finalizedBy 'jacocoTestReport'
}

// Configuring the JaCoCo test report task
tasks.named('jacocoTestReport') {
	dependsOn test // Ensure tests run before generating the report
	reports {
		html.required.set(true)  // Generates HTML report for easy viewing
		xml.required.set(false)  // XML report, set to true if needed for CI tools
		csv.required.set(false)  // CSV report, set to true if needed
	}
}

// Enforce code coverage minimum threshold (optional)
tasks.named('jacocoTestCoverageVerification') {
	dependsOn test
	violationRules {
		rule {
			limit {
				minimum = 0.6 // Set to 60%, adjust as needed
			}
		}
	}
}
